<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans     
        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context-3.0.xsd
        http://www.springframework.org/schema/tx
   	 	http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">


	<!-- Indicates to spring which are the packages in which they are defined beans and the framework is 
		able to automatically upload within the context, thanks to some specific annotations -->
	<context:component-scan base-package="it.uniroma2.dao" />
	<context:component-scan base-package="it.uniroma2.service" />
	<context:component-scan base-package="it.uniroma2.controller" />

	<!-- Bean to admin excpeption at perstistence level -->
	<bean
		class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" />
	<bean class="org.springframework.orm.hibernate4.HibernateExceptionTranslator" />
		

	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"
		lazy-init="false">
		<property name="locations">
			<list>
				<value>classpath:/properties/database.properties</value>
				<value>/WEB-INF/properties/security.properties</value>
			</list>
		</property>
	</bean>
	
	
	<!-- Configure the multipart resolver -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
    	<!-- the maximum file size in bytes -->
    	<property name="maxUploadSize" value="10000000"/>
	</bean>


	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">

		<property name="dataSource">
			<ref bean="dataSource" />
		</property>

		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<prop key="hibernate.show_sql">true</prop>
				<!-- Update the database thanks to the annotation in the domain class  -->
				<prop key="hibernate.hbm2ddl.auto">update</prop>
			</props>
		</property> 
		  
		<!-- Indicates to Hibernate which package include the classes and the annotations for
				the mapping with db -->
		 <property name="packagesToScan">
			<list>
				<value>it.uniroma2.domain</value>
			    <value>it.uniroma2.dao</value>
			</list>
		</property>
	</bean>


	<!-- Bean to admin the transaction in Hibernate -->
	<bean id="txManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	
	<!-- Tag to use @Transactional funzioni -->
	<tx:annotation-driven transaction-manager="txManager" />

</beans>